prep_raw <- function(file) {
file %>%
read_csv() %>%
mutate(block = replace_na(block,'instructions'),
trials_this_n = replace_na(trials_this_n,0)) %>%
mutate(across(average_acceleration_x:timestamp, as.numeric), # coerce eyetracking data to numeric.
across(contains(c('in_saccade','in_blink')), as.logical)) # change logical data to logical format
#across(contains('gaze_x'), ~ . - 1920/2), # center x and y gaze coordinates based on a 1920x1080 monitor size
#across(contains('gaze_y'), ~ . - 1080/2),
#average_gaze_dist = sqrt(average_gaze_x^2 + average_gaze_y^2)) %>% # add gaze distance from center
#relocate(average_gaze_dist, .after = average_gaze_y)
}
source('code/methods.R')
source('code/methods.R')
# List files to be loaded and the output file
et_file <- 'data/hf_focus/raw/eyetracking_raw.csv'
# load libraries and source functions
library(janitor)
library(rstatix)
library(tidyverse)
stim_file <- 'data/hf_focus/raw/stimulus.csv'
out_file <- 'data/hf_focus/raw/raw_combined.csv'
combined <- match_eyetracking_with_stimulus(et_file,stim_file,out_file)
problems()
out_file <- dirname(et_file)
# load libraries and source functions
library(janitor)
library(rstatix)
library(rmarkdown)
library(tidyverse)
source('code/methods.R')
# List files to be loaded and the output file
et_file <- 'data/hf_focus/raw/eyetracking_raw.csv'
stim_file <- 'data/hf_focus/raw/stimulus.csv'
num_trials <- 35
combined <- match_et_with_stim(et_file,stim_file)
prefix_df <- calc_prefixation(combined)
fix_df <- calc_fixation(combined)
combined_n <- normalize_raw(combined,
prefix = prefix_df,
fix = fix_df,
trials = num_trials)
stim_df <- calc_stimulus(combined_n)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.align = 'center')
library(kableExtra)
library(ggpubr)
library(scales)
library(plotly)
library(tidyverse)
c.theme <- function(){
theme_minimal() +
theme(text = element_text(family = 'Times New Roman'),
plot.title = element_text(hjust = 0.5, size = 20),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
}
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n)
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
c.theme()
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus')
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
theme_minimal()
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
install.packages("binhex")
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,15), oob = squish) +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(screen_gaze_hist, tooltip = 'text')
screen_gaze_hist
options(pkgType = "binary")
install.packages("hexbin")
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,15), oob = squish) +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(screen_gaze_hist, tooltip = 'text')
theme_minimal() +
theme(text = element_text(family = 'serif'),
plot.title = element_text(hjust = 0.5, size = 20),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.align = 'center')
library(kableExtra)
library(ggpubr)
library(scales)
library(plotly)
library(tidyverse)
c.theme <- function(){
theme_minimal() +
theme(text = element_text(family = 'serif'),
plot.title = element_text(hjust = 0.5, size = 20),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
}
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
theme_minimal() +
theme(aspect.ratio = 1/10)
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
theme_minimal() +
theme(aspect.ratio = 1)
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
theme_minimal() +
theme(aspect.ratio = 1/7)
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
theme_minimal() +
theme(aspect.ratio = 1/4)
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
theme_minimal() +
theme(aspect.ratio = 1/2)
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
```{r raw stimuli pupil sizes, fig.height= "12"}
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
c.theme()
stim_df
unique(stim_df$race)
stim_df %>%
mutate(facet_label = as.factor(paste(race,gender,expression, sep = ';'))) %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~facet_label) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
c.theme()
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
c.theme()
?distinct
facet_labels <- stim_df %>%
distinct(trials_this_n,gender,race,expression)
facet_labels
facet_labels <- stim_df %>%
distinct(trials_this_n,gender,race,expression) %>%
list(as.character(.$trials_this_n) = paste(gender,race,expression,sep = ';'))
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_size)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Raw Medium Pupil Size Across Epochs Within Stimulus') +
c.theme()
stim_df %>%
ggplot(aes(x = epoch, y = stim_med_average_pupil_norm_pf)) +
geom_point(size = 2) +
facet_wrap(~trials_this_n) +
labs(x = 'Epoch', y = 'Pupil Size (unitless)', title = 'Prefixation-normalized Pupil Size Across Epochs Within Stimulus') +
c.theme()
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
render('code/generate_report.Rmd', output_format = 'html_document', output_file = 'test.html')
render('code/generate_report.Rmd', output_format = 'html_document(title = \'Test\')', output_file = 'test.html')
render('code/generate_report.Rmd', output_format = 'html_document', output_options = list(title = 'HF_Focus'), output_file = 'test.html')
render('code/generate_report.Rmd', output_format = html_document(title = 'HF_Focus'), output_file = 'test.html')
?html_document
participant <- 'HF_Focus'
render('code/generate_report.Rmd', output_format = html_document(title = 'HF_Focus'), output_file = 'test.html')
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
dir.create(report_dir, showWarnings = FALSE, mode = '770')
report_dir <- 'reports'
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
?stat_binhex
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, fill = average_pupil_size,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'pupil size:', fill)))) +
stat_binhex(func = 'median') +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,6), oob = squish) +
labs(title = 'Gaze Within Stimulus Zone During Stimulus', x = '', y = '', fill = '% of samples') +
c.theme()
stim_gaze_pupil_size
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, fill = average_pupil_size,
text = paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'pupil size:', fill))) +
stat_binhex(func = 'median') +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,6), oob = squish) +
labs(title = 'Gaze Within Stimulus Zone During Stimulus', x = '', y = '', fill = '% of samples') +
c.theme()
stim_gaze_pupil_size
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, fill = average_pupil_size,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'pupil size: ', fill)))) +
stat_summary_hex(fun = 'median') +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,6), oob = squish) +
labs(title = 'Gaze Within Stimulus Zone During Stimulus', x = '', y = '', fill = '% of samples') +
c.theme()
stim_gaze_pupil_size
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'pupil size: ', round(z,0))))) +
stat_summary_hex(fun = 'median') +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,6), oob = squish) +
labs(title = 'Gaze Within Stimulus Zone During Stimulus', x = '', y = '', fill = '% of samples') +
c.theme()
stim_gaze_pupil_size
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size)) +
stat_summary_hex(fun = 'median') +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,6), oob = squish) +
labs(title = 'Gaze Within Stimulus Zone During Stimulus', x = '', y = '', fill = '% of samples') +
c.theme()
stim_gaze_pupil_size
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size)) +
stat_summary_hex(fun = 'median') +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno') +
labs(title = 'Gaze Within Stimulus Zone During Stimulus', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(stim_gaze_hist, tooltip = list('x','y','text'))
ggplotly(stim_gaze_pupil_size)
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size)) +
stat_summary_hex(fun = 'median') +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno') +
labs(title = 'Median Average Pupil Size During Stimulus', x = '', y = '', fill = 'Average Pupil Size') +
c.theme()
ggplotly(stim_gaze_pupil_size)
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size)) +
stat_summary_hex(fun = 'median', fun.args = list(na.rm = TRUE)) +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno') +
labs(title = 'Median Average Pupil Size During Stimulus', x = '', y = '', fill = 'Average Pupil Size') +
c.theme()
ggplotly(stim_gaze_pupil_size)
stim_gaze_hist <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,6), oob = squish) +
labs(title = 'Gaze Within Stimulus Zone During Stimulus', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(stim_gaze_hist, tooltip = list('x','y','text'))
render('code/generate_report.Rmd',
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size)) +
stat_summary_hex(fun = 'median', fun.args = list(na.rm = TRUE)) +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno') +
facet_wrap(~gender) +
labs(title = 'Median Average Pupil Size During Stimulus', x = '', y = '', fill = 'Average Pupil Size') +
c.theme()
ggplotly(stim_gaze_pupil_size)
stim_gaze_pupil_size <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size)) +
stat_summary_hex(fun = 'median', fun.args = list(na.rm = TRUE)) +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno') +
labs(title = 'Median Average Pupil Size During Stimulus', x = '', y = '', fill = 'Average Pupil Size') +
c.theme()
ggplotly(stim_gaze_pupil_size)
render('code/generate_report.Rmd',
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
