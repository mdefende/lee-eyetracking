prep_raw <- function(file) {
file %>%
read_csv() %>%
mutate(block = replace_na(block,'instructions'),
trials_this_n = replace_na(trials_this_n,0)) %>%
mutate(across(average_acceleration_x:timestamp, as.numeric), # coerce eyetracking data to numeric.
across(contains(c('in_saccade','in_blink')), as.logical)) # change logical data to logical format
#across(contains('gaze_x'), ~ . - 1920/2), # center x and y gaze coordinates based on a 1920x1080 monitor size
#across(contains('gaze_y'), ~ . - 1080/2),
#average_gaze_dist = sqrt(average_gaze_x^2 + average_gaze_y^2)) %>% # add gaze distance from center
#relocate(average_gaze_dist, .after = average_gaze_y)
}
source('code/methods.R')
source('code/methods.R')
# List files to be loaded and the output file
et_file <- 'data/hf_focus/raw/eyetracking_raw.csv'
# load libraries and source functions
library(janitor)
library(rstatix)
library(tidyverse)
stim_file <- 'data/hf_focus/raw/stimulus.csv'
out_file <- 'data/hf_focus/raw/raw_combined.csv'
combined <- match_eyetracking_with_stimulus(et_file,stim_file,out_file)
problems()
out_file <- dirname(et_file)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
combined_n  %>% filter(block == 'stimulus') %>% summarize(quantile(average_pupil_size, probs = seq(0, 1, 0.20)))
combined_n  %>% filter(block == 'stimulus') %>% summarize(quantile(average_pupil_size, probs = seq(0, 1, 0.10)))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.align = 'center')
options(width = 1200)
library(kableExtra)
library(ggpubr)
library(scales)
library(plotly)
library(tidyverse)
c.theme <- function(){
theme_minimal() +
theme(text = element_text(family = 'serif'),
plot.title = element_text(hjust = 0.5, size = 20),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
}
stim_gaze_pupil_n <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, z = average_pupil_size)) +
stat_summary_hex(fun = 'n', fun.args = list(na.rm = TRUE)) +
scale_x_continuous(limits = c(540,1380)) +
scale_y_reverse(limits = c(810,270)) +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno') +
labs(title = 'Samples During Stimulus', x = '', y = '', fill = 'N') +
c.theme()
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
?n()
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
stim_gaze_pupil_n <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, fill = ..count..,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'n:', count)))) +
geom_hex() +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,)) +
labs(title = 'Samples During Stimulus', x = '', y = '', fill = 'N') +
c.theme()
stim_gaze_pupil_n <- combined_n %>%
filter(block == 'stimulus', between(average_gaze_x,540,1380) & between(average_gaze_y,270,810)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y, fill = ..count..,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'n:', count)))) +
geom_hex() +
scale_y_reverse() +
coord_fixed() +
scale_fill_viridis_c(option = 'inferno') +
labs(title = 'Samples During Stimulus', x = '', y = '', fill = 'N') +
c.theme()
View(stim_gaze_pupil_n)
pg <- ggplot_build(stim_gaze_pupil_n)
View(pg)
pg$data[[1]]$count
quantile(pg$data[[1]]$count,probs = seq(0,1,0.1))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
## Generate Preprocessing Report
render('code/generate_report.Rmd',
output_format = html_document(title = participant),
output_dir = report_dir,
output_file = paste0(participant,'.html'))
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
?after_stat
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,after_stat(round(max(count/sum(count))*100))), oob = squish) +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
gp <- ggplot_build(screen_gaze_hist)
gp$data[[1]]$fill[[1]]
gp$data[[1]]$ncount
max(gp$data[[1]]$count)
perc90 <- quartile(gp$data[[1]]$count/sum(gp$data[[1]]$count), probs = 0.9)
perc90 <- quantile(gp$data[[1]]$count/sum(gp$data[[1]]$count), probs = 0.9)
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
gp <- ggplot_build(screen_gaze_hist)
perc90 <- quantile(gp$data[[1]]$count/sum(gp$data[[1]]$count), probs = 0.9)
screen_gaze_hist <- screen_gaze_hist +
scale_fill_viridis_c(option = 'inferno', limits = c(0,perc90), oob = squish)
ggplotly(screen_gaze_hist, tooltip = 'text')
?scale_fill_viridis_cperc90
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
screen_gaze_hist <- screen_gaze_hist +
scale_fill_viridis_c(option = 'inferno', limits = c(0,perc90*100), oob = squish)
ggplotly(screen_gaze_hist, tooltip = 'text')
perc95 <- quantile(gp$data[[1]]$count/sum(gp$data[[1]]$count), probs = 0.95)
screen_gaze_hist <- screen_gaze_hist +
scale_fill_viridis_c(option = 'inferno', limits = c(0,perc95*100), oob = squish)
ggplotly(screen_gaze_hist, tooltip = 'text')
?log
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,5), oob = squish, trans = 'log10') +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(screen_gaze_hist, tooltip = 'text')
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_y_reverse() +
scale_fill_viridis_c(option = 'inferno', limits = c(0,5), oob = squish) +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(screen_gaze_hist, tooltip = 'text')
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_x_continuous(limits = c(0,1920)) +
scale_y_reverse(limits = c(1080,0)) +
scale_fill_viridis_c(option = 'inferno', limits = c(0,5), oob = squish) +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(stim_gaze_hist, tooltip = list('x','y','text'))
screen_gaze_hist <- combined_n %>%
filter(block != 'instructions', between(average_gaze_x,0,1920) & between(average_gaze_y,0,1080)) %>%
select(average_gaze_x, average_gaze_y) %>%
ggplot(aes(x = average_gaze_x, average_gaze_y, fill = ..count../sum(..count..)*100,
text = after_stat(paste('x:', round(x,0), '\n',
'y:', round(-y,0), '\n',
'percent:', round(count/sum(count)*100,2),'%')))) +
geom_hex() +
scale_x_continuous(limits = c(0,1920)) +
scale_y_reverse(limits = c(1080,0)) +
scale_fill_viridis_c(option = 'inferno', limits = c(0,5), oob = squish) +
coord_fixed() +
labs(title = 'Gaze Plot Over the Screen', x = '', y = '', fill = '% of samples') +
c.theme()
ggplotly(screen_gaze_hist, tooltip = 'text')
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
source("~/Work/projects/lee-projects/eyetracking/code/main.R", echo=TRUE)
?install.packages
?devtools::install_version
# load libraries and source functions
library(janitor)
library(rstatix)
library(rmarkdown)
library(tidyverse)
# remove current objects from workspace
rm(list=ls())
source('code/methods.R')
install.packages("workflowr")
